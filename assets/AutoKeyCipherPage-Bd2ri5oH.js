import{a as w,b as E,c as B}from"./lib-bvgm_GG7.js";import{d as S,c as i,b as g,o as t,a as N,w as c,e as u,h as a,i as x,F as V,t as _,r as K,f as s,g as D}from"./index-BAIMoHBE.js";const T=S({__name:"AutoKeyCipher",props:{plaintext:{},_key:{},repeat:{type:Boolean}},setup(U,{expose:h}){const p=U,d=i(()=>p.plaintext.replace(/ /g,"")),v=i(()=>p._key.replace(/ /g,"")),A=i(()=>p.repeat),C=i(()=>d.value.split("").map(o=>w(o.charCodeAt(0)))),f=i(()=>A.value?Array(d.value.length).fill(0).map((o,e)=>v.value[e%v.value.length]).join(""):(v.value+d.value).substring(0,d.value.length)),k=i(()=>f.value.split("").map(o=>w(o.charCodeAt(0)))),n=i(()=>C.value.map((o,e)=>E(o,k.value[e]))),l=i(()=>n.value.map(o=>String.fromCharCode(B(o))).join(""));return h({ciphertext:l}),(o,e)=>{const b=g("v-table");return t(),N(b,null,{default:c(()=>[u("tbody",null,[u("tr",null,[e[0]||(e[0]=u("td",null,"Plaintext:",-1)),(t(!0),a(V,null,x(d.value,(m,y)=>(t(),a("td",{key:y},_(m),1))),128))]),u("tr",null,[e[1]||(e[1]=u("td",null,"P Values:",-1)),(t(!0),a(V,null,x(C.value,(m,y)=>(t(),a("td",{key:y},_(m),1))),128))]),u("tr",null,[e[2]||(e[2]=u("td",null,"Key Stream:",-1)),(t(!0),a(V,null,x(f.value,(m,y)=>(t(),a("td",{key:y},_(m),1))),128))]),u("tr",null,[e[3]||(e[3]=u("td",null,"K Values:",-1)),(t(!0),a(V,null,x(k.value,(m,y)=>(t(),a("td",{key:y},_(m),1))),128))]),u("tr",null,[e[4]||(e[4]=u("td",null,"C Values:",-1)),(t(!0),a(V,null,x(n.value,(m,y)=>(t(),a("td",{key:y},_(m),1))),128))]),u("tr",null,[e[5]||(e[5]=u("td",null,"Ciphertext: ",-1)),(t(!0),a(V,null,x(l.value,(m,y)=>(t(),a("td",{key:y},_(m),1))),128))])])]),_:1})}}}),$=S({__name:"AutoKeyDecipher",props:{ciphertext:{},_key:{},repeat:{type:Boolean}},setup(U,{expose:h}){const p=U,d=i(()=>p.ciphertext.replace(/ /g,"")),v=i(()=>p._key.replace(/ /g,"")),A=i(()=>p.repeat),C=i(()=>d.value.split("").map(k=>w(k.charCodeAt(0)))),f=i(()=>{let k=[],n=[];for(let e=0;e<C.value.length;++e){const b=e>=v.value.length?A.value?w(v.value[e%v.value.length].charCodeAt(0)):k[e-v.value.length]:w(v.value[e].charCodeAt(0));n.push(b),k.push(E(C.value[e],-b))}const l=String.fromCharCode(...n.map(e=>B(e))),o=String.fromCharCode(...k.map(e=>B(e)));return{keystream:l,kValues:n,plaintext:o,pValues:k}});return h({plaintext:i(()=>f.value.plaintext)}),(k,n)=>{const l=g("v-table");return t(),N(l,null,{default:c(()=>[u("tbody",null,[u("tr",null,[n[0]||(n[0]=u("td",null,"Ciphertext:",-1)),(t(!0),a(V,null,x(d.value,(o,e)=>(t(),a("td",{key:e},_(o),1))),128))]),u("tr",null,[n[1]||(n[1]=u("td",null,"C Values:",-1)),(t(!0),a(V,null,x(C.value,(o,e)=>(t(),a("td",{key:e},_(o),1))),128))]),u("tr",null,[n[2]||(n[2]=u("td",null,"Key Stream:",-1)),(t(!0),a(V,null,x(f.value.keystream,(o,e)=>(t(),a("td",{key:e},_(o),1))),128))]),u("tr",null,[n[3]||(n[3]=u("td",null,"K Values:",-1)),(t(!0),a(V,null,x(f.value.kValues,(o,e)=>(t(),a("td",{key:e},_(o),1))),128))]),u("tr",null,[n[4]||(n[4]=u("td",null,"P Values:",-1)),(t(!0),a(V,null,x(f.value.pValues,(o,e)=>(t(),a("td",{key:e},_(o),1))),128))]),u("tr",null,[n[5]||(n[5]=u("td",null,"Plaintext: ",-1)),(t(!0),a(V,null,x(f.value.plaintext,(o,e)=>(t(),a("td",{key:e},_(o),1))),128))])])]),_:1})}}}),L={key:1,class:"text-grey mt-2"},M={key:1,class:"text-grey mt-2"},G=S({__name:"AutoKeyCipherPage",setup(U){const h=K(!1),p=K(""),d=K(""),v=K(!1),A=K(null),C=K(null),f=i(()=>{var n;return((n=A.value)==null?void 0:n.ciphertext)||""}),k=i(()=>{var n;return((n=C.value)==null?void 0:n.plaintext)||""});return(n,l)=>{const o=g("v-tab"),e=g("v-tabs"),b=g("v-text-field"),m=g("v-checkbox"),y=g("v-divider"),P=g("v-tabs-window-item"),F=g("v-tabs-window"),j=g("v-card"),R=g("v-sheet");return t(),N(R,{"min-width":"600"},{default:c(()=>[l[12]||(l[12]=u("h4",{class:"text-h4 mb-4"},"Auto Key Cipher",-1)),s(j,{elevation:"0"},{default:c(()=>[s(e,{modelValue:h.value,"onUpdate:modelValue":l[0]||(l[0]=r=>h.value=r),"align-tabs":"center"},{default:c(()=>[s(o,{value:!0},{default:c(()=>l[10]||(l[10]=[D("Encrypt")])),_:1}),s(o,{value:!1},{default:c(()=>l[11]||(l[11]=[D("Decrypt")])),_:1})]),_:1},8,["modelValue"]),s(F,{modelValue:h.value,"onUpdate:modelValue":l[9]||(l[9]=r=>h.value=r)},{default:c(()=>[s(P,{value:!0},{default:c(()=>[s(b,{modelValue:p.value,"onUpdate:modelValue":l[1]||(l[1]=r=>p.value=r),class:"my-4",label:"Message","hide-details":"auto"},null,8,["modelValue"]),s(b,{modelValue:d.value,"onUpdate:modelValue":l[2]||(l[2]=r=>d.value=r),label:"Key","hide-details":"auto"},null,8,["modelValue"]),s(m,{modelValue:v.value,"onUpdate:modelValue":l[3]||(l[3]=r=>v.value=r),label:"Repeat Key","hide-details":"auto"},null,8,["modelValue"]),s(b,{modelValue:f.value,"onUpdate:modelValue":l[4]||(l[4]=r=>f.value=r),class:"mb-4",label:"Encrypted","hide-details":"auto",variant:"outlined",disabled:"",readonly:""},null,8,["modelValue"]),p.value.length!=0&&d.value.length!=0?(t(),a(V,{key:0},[s(y,{thickness:"3"}),s(T,{ref_key:"encrypter",ref:A,plaintext:p.value,_key:d.value,repeat:v.value},null,8,["plaintext","_key","repeat"])],64)):(t(),a("p",L,"No message or key provided"))]),_:1}),s(P,{value:!1},{default:c(()=>[s(b,{modelValue:p.value,"onUpdate:modelValue":l[5]||(l[5]=r=>p.value=r),class:"my-4",label:"Ciphertext","hide-details":"auto"},null,8,["modelValue"]),s(b,{modelValue:d.value,"onUpdate:modelValue":l[6]||(l[6]=r=>d.value=r),label:"Key","hide-details":"auto"},null,8,["modelValue"]),s(m,{modelValue:v.value,"onUpdate:modelValue":l[7]||(l[7]=r=>v.value=r),label:"Repeat Key","hide-details":"auto"},null,8,["modelValue"]),s(b,{modelValue:k.value,"onUpdate:modelValue":l[8]||(l[8]=r=>k.value=r),class:"mb-4",label:"Decrypted","hide-details":"auto",variant:"outlined",disabled:"",readonly:""},null,8,["modelValue"]),p.value.length!=0&&d.value.length!=0?(t(),a(V,{key:0},[s(y,{thickness:"3"}),s($,{ref_key:"decrypter",ref:C,ciphertext:p.value,_key:d.value,repeat:v.value},null,8,["ciphertext","_key","repeat"])],64)):(t(),a("p",M,"No message or key provided"))]),_:1})]),_:1},8,["modelValue"])]),_:1})]),_:1})}}});export{G as default};
